print(g)
ggsave(filename = figurefile, plot = g, width = 7, height = 5)
figurefile <- paste0(prefix, "check.as6.dgp", dgpname, ".model", modelname, ".theta-vs-wasserstein.png")
ggsave(filename = figurefile, plot = g, width = 7, height = 5, dpi = 150)
if (modelname == dgpname){
figurefile <- paste0(prefix, "check.as6.dgp", dgpname, ".model", modelname, ".distancetheta.pdf")
g <- qplot(x = x, y = y, geom = "point") + xlab("distance to theta star") + ylab("Wasserstein distance") + geom_smooth(method = "lm", se = FALSE)
print(g)
ggsave(filename = figurefile, plot = g, width = 7, height = 5)
} else {
figurefile <- paste0(prefix, "check.as6.dgp", dgpname, ".model", modelname, ".distancetheta.pdf")
g <- qplot(x = x, y = ysqrt, geom = "point") + geom_smooth(method = "lm", se = FALSE) + xlab(expression(abs(theta-2))) + ylab("sqrt(Wasserstein distance)")
print(g)
ggsave(filename = figurefile, plot = g, width = 7, height = 5)
figurefile <- paste0(prefix, "check.as6.dgp", dgpname, ".model", modelname, ".distancetheta.png")
ggsave(filename = figurefile, plot = g, width = 7, height = 5, dpi = 150)
}
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
library(winference)
registerDoParallel(cores = detectCores())
rm(list = ls())
setmytheme()
my_colors <- get_my_colors()
set.seed(12)
doRun <- FALSE
max_time <- 30*60
d <- 2
target <- get_multivariate_normal(d)
target$parameters$tau <- 5
nobservations <- 100
nparticles = 2048
p <- 1
prefix <- ""
obsfile <- paste0(prefix, "mvnormaldata.d", d, ".n", nobservations, ".RData")
load(obsfile)
#exact posterior
mu_prior <- rep(target$parameters$mu_0, d)
sigma_prior <- diag(target$parameters$tau^2, d, d)
target$parameters$S
sigma_posterior <- solve(nobservations * solve(target$parameters$S) + solve(sigma_prior))
mu_posterior <- sigma_posterior %*% (solve(sigma_prior) %*% matrix(mu_prior, ncol = 1) + nobservations * solve(target$parameters$S) %*% matrix(rowMeans(obs), ncol = 1))
# exact draws from posterior
posterior_sample <- fast_rmvnorm(nparticles, mu_posterior, sigma_posterior)
filename <- paste0(prefix, "mvnormalwsmc.d", d, ".n", nobservations, ".wasserstein.RData")
load(filename)
results_wasserstein <- results
# sum(results_euclidean$ncomputed)
# sum(results_summary$ncomputed)
sum(results_wasserstein$ncomputed)
#wsmc.euclidean.df <- wsmc_to_dataframe(results_euclidean) %>% filter(step == length(results_euclidean$thetas_history))
#wsmc.summary.df <- wsmc_to_dataframe(results_summary) %>% filter(step == length(results_summary$thetas_history))
wsmc.wasserstein.df <- wsmc_to_dataframe(results_wasserstein) %>% filter(step == length(results_wasserstein$thetas_history))
g1 <- ggplot(data.frame(posterior_sample), aes(x = X1)) + geom_density(aes(y = ..density.., fill = "Posterior", colour = "Posterior"), alpha = 0.5)
#g1 <- g1 + geom_density(data=wsmc.summary.df, aes(y = ..density.., fill = "Summary", colour = "Summary"), alpha = 0.5)
g1 <- g1 + geom_density(data=wsmc.wasserstein.df, aes(y = ..density.., fill = "Wasserstein", colour = "Wasserstein"), alpha = 0.5)
#g1 <- g1 + geom_density(data=rej.summary.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g1 <- g1 + geom_density(data=rej.wasserstein.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g1 <- g1 + geom_density(data=wsmc.euclidean.df, aes(y = ..density.., fill = "Euclidean", colour = "Euclidean"), alpha = 0.5)
g1 <- g1 + scale_color_manual(name = "", values = my_colors) + scale_fill_manual(name = "", values = my_colors)
g1 <- g1 + xlab(expression(theta[1]))
g1 <- g1 + geom_label(data = data.frame(x = c(-0.95,-1, -1.05, -0.31, -1.12), y = c(3.9, 3.4, 2.7, 1.25, 1.7),
method = c("Posterior", "Summary", "Wasserstein", "Euclidean", "Rej. Summary")),
aes(x = x, y = y, colour = method, label = method), size = 8) + theme(legend.position = "none")
g1
g2 <- ggplot(data.frame(posterior_sample), aes(x = X2)) + geom_density(aes(y = ..density.., fill = "Posterior", colour = "Posterior"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.summary.df, aes(y = ..density.., fill = "Summary", colour = "Summary"), alpha = 0.5)
g2 <- g2 + geom_density(data=wsmc.wasserstein.df, aes(y = ..density.., fill = "Wasserstein", colour = "Wasserstein"), alpha = 0.5)
#g2 <- g2 + geom_density(data=rej.summary.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.euclidean.df, aes(y = ..density.., fill = "Euclidean", colour = "Euclidean"), alpha = 0.5)
g2 <- g2 + scale_color_manual(name = "", values = my_colors) + scale_fill_manual(name = "", values = my_colors)
g2 <- g2 + geom_label(data = data.frame(x = c(-0.13,-0.15, -0.23, 0.55, 0.5), y = c(4, 3.6, 2.8, 1.1, 1.6),
method = c("Summary", "Posterior", "Wasserstein", "Euclidean","Rej. Summary")),
aes(x = x, y = y, colour = method, label = method), size = 8) + theme(legend.position = "none")
g2 <- g2 + xlab(expression(theta[2]))
g2
g2 <- ggplot(data.frame(posterior_sample), aes(x = X2)) + geom_density(aes(y = ..density.., fill = "Posterior", colour = "Posterior"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.summary.df, aes(y = ..density.., fill = "Summary", colour = "Summary"), alpha = 0.5)
g2 <- g2 + geom_density(data=wsmc.wasserstein.df, aes(y = ..density.., fill = "Wasserstein", colour = "Wasserstein"), alpha = 0.5)
#g2 <- g2 + geom_density(data=rej.summary.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.euclidean.df, aes(y = ..density.., fill = "Euclidean", colour = "Euclidean"), alpha = 0.5)
g2 <- g2 + scale_color_manual(name = "", values = my_colors) + scale_fill_manual(name = "", values = my_colors)
g2 <- g2 + geom_label(data = data.frame(x = c(-0.13,-0.15, -0.23, 0.55, 0.5), y = c(4, 3.6, 2.8, 1.1, 1.6),
method = c("Summary", "Posterior", "Wasserstein", "Euclidean","Rej. Summary")),
aes(x = x, y = y, colour = method, label = method), size = 8) + theme(legend.position = "none")
g2 <- g2 + xlab(expression(theta[2]))
g2
library(gridExtra)
library(gridExtra)
grid.arrange(g1 + theme(legend.position = "none"), g2 + theme(legend.position = "none"), nrow = 1)
wsmc.wasserstein.df$X1
source('~/Dropbox/mmd_project_code/gandk_plots_compare.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
true_theta
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
wsmc.wasserstein.df$X1
write.table(wsmc.wasserstein.df, "wabc_df.txt", append = FALSE, sep = " ", dec = ".",
row.names = TRUE, col.names = TRUE)
library(feather)
write_feather(wsmc.wasserstein.df, "wabc_df_1")
write.csv(wsmc.wasserstein.df, "wabc_df.csv", append = FALSE, sep = " ", dec = ".",
+             row.names = TRUE, col.names = TRUE)
write.csv(wsmc.wasserstein.df, "wabc_df.csv", append = FALSE, sep = " ", dec = ".",row.names = TRUE, col.names = TRUE)
write.csv(wsmc.wasserstein.df, "wabc_df.csv", sep = " ", dec = ".",row.names = TRUE, col.names = TRUE)
posterior_sample
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
results
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
write.csv(wsmc.wasserstein.df, "wabc_results_df.csv")
target$parameter_names
target$parameters
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_generate_data.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
wsmc.wasserstein.df
g1 <- ggplot(data.frame(posterior_sample), aes(x = X1)) + geom_density(aes(y = ..density.., fill = "Posterior", colour = "Posterior"), alpha = 0.5)
#g1 <- g1 + geom_density(data=wsmc.summary.df, aes(y = ..density.., fill = "Summary", colour = "Summary"), alpha = 0.5)
g1 <- g1 + geom_density(data=wsmc.wasserstein.df, aes(y = ..density.., fill = "Wasserstein", colour = "Wasserstein"), alpha = 0.5)
#g1 <- g1 + geom_density(data=rej.summary.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g1 <- g1 + geom_density(data=rej.wasserstein.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g1 <- g1 + geom_density(data=wsmc.euclidean.df, aes(y = ..density.., fill = "Euclidean", colour = "Euclidean"), alpha = 0.5)
g1 <- g1 + scale_color_manual(name = "", values = my_colors) + scale_fill_manual(name = "", values = my_colors)
g1 <- g1 + xlab(expression(theta[1]))
g1 <- g1 + geom_label(data = data.frame(x = c(-0.95, -1.05), y = c(3.9, 2.7),
method = c("Posterior", "Wasserstein")),
aes(x = x, y = y, colour = method, label = method), size = 8) + theme(legend.position = "none")
g1
g2 <- ggplot(data.frame(posterior_sample), aes(x = X2)) + geom_density(aes(y = ..density.., fill = "Posterior", colour = "Posterior"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.summary.df, aes(y = ..density.., fill = "Summary", colour = "Summary"), alpha = 0.5)
g2 <- g2 + geom_density(data=wsmc.wasserstein.df, aes(y = ..density.., fill = "Wasserstein", colour = "Wasserstein"), alpha = 0.5)
#g2 <- g2 + geom_density(data=rej.summary.df, aes(y = ..density.., fill = "Rej. Summary", colour = "Rej. Summary"), alpha = 0.5)
#g2 <- g2 + geom_density(data=wsmc.euclidean.df, aes(y = ..density.., fill = "Euclidean", colour = "Euclidean"), alpha = 0.5)
g2 <- g2 + scale_color_manual(name = "", values = my_colors) + scale_fill_manual(name = "", values = my_colors)
g2 <- g2 + geom_label(data = data.frame(x = c(-0.15, -0.23), y = c(3.6, 2.8),
method = c( "Posterior", "Wasserstein")),
aes(x = x, y = y, colour = method, label = method), size = 8) + theme(legend.position = "none")
g2 <- g2 + xlab(expression(theta[2]))
g2
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_plots.R')
write.csv(wsmc.wasserstein.df, "1d_wabc_200.csv")
load(test_data.txt)
load('test_data.txt')
read.table("test_data.txt")
read.table("test_data.txt")
g <- read.table("test_data.txt")
g
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
list(read.table("test_data.txt"))
read.table("test_data.txt")$V1
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
load("/Users/HaritaDellaporta/mvnormaldata.d1.n500.RData")
type(obs)
length(obs)
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
len(obss)
length(obss)
obs
load("/Users/HaritaDellaporta/mvnormaldata.d1.n500.RData")
matrix(obs)
matrix(obss)
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
length(obs)
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
filename <- paste0(prefix, "mvnormalwsmc.d", d, ".n", nobservations,"outl",.0, ".wasserstein.RData")
load(filename)
results_wasserstein <- results
# sum(results_euclidean$ncomputed)
# sum(results_summary$ncomputed)
sum(results_wasserstein$ncomputed)
#wsmc.euclidean.df <- wsmc_to_dataframe(results_euclidean) %>% filter(step == length(results_euclidean$thetas_history))
#wsmc.summary.df <- wsmc_to_dataframe(results_summary) %>% filter(step == length(results_summary$thetas_history))
wsmc.wasserstein.df <- wsmc_to_dataframe(results_wasserstein) %>% filter(step == length(results_wasserstein$thetas_history))
wsmc.wasserstein.df
?write.csv
write.csv(wsmc.wasserstein.df, "results_0.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
install.packages(mclust)
"mclust"
install.packages("mclust")
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
# xekina apo edw kai katw
filename <- paste0(prefix, "mvnormalwsmc.d", d, ".n", nobservations,"outl",.1, ".wasserstein.RData")
load(filename)
results_wasserstein <- results
# sum(results_euclidean$ncomputed)
# sum(results_summary$ncomputed)
sum(results_wasserstein$ncomputed)
#wsmc.euclidean.df <- wsmc_to_dataframe(results_euclidean) %>% filter(step == length(results_euclidean$thetas_history))
#wsmc.summary.df <- wsmc_to_dataframe(results_summary) %>% filter(step == length(results_summary$thetas_history))
wsmc.wasserstein.df <- wsmc_to_dataframe(results_wasserstein) %>% filter(step == length(results_wasserstein$thetas_history))
write.csv(wsmc.wasserstein.df, "results_1.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/mvnormal_wsmc_wasserstein.R')
# xekina apo edw kai katw
filename <- paste0(prefix, "mvnormalwsmc.d", d, ".n", nobservations,"outl",.2, ".wasserstein.RData")
load(filename)
results_wasserstein <- results
# sum(results_euclidean$ncomputed)
# sum(results_summary$ncomputed)
sum(results_wasserstein$ncomputed)
#wsmc.euclidean.df <- wsmc_to_dataframe(results_euclidean) %>% filter(step == length(results_euclidean$thetas_history))
#wsmc.summary.df <- wsmc_to_dataframe(results_summary) %>% filter(step == length(results_summary$thetas_history))
wsmc.wasserstein.df <- wsmc_to_dataframe(results_wasserstein) %>% filter(step == length(results_wasserstein$thetas_history))
write.csv(wsmc.wasserstein.df, "results_2.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.0, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
wsmc.df
write.csv(wsmc.df, "results_0_gandk.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.1, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_1_gandk.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.2, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_2_gandk.csv")
source('~/Dropbox/mmd_project_code/gandk_plots_compare.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.0, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_0_gandk_500.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.1, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_1_gandk_500.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.2, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_2_gandk_500.csv")
source('~/Dropbox/mmd_project_code/gandk_plots_compare.R')
source('~/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/F70AA751-992E-477B-A354-B5E7D9B457B9/SV_model.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.0, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_0_gandk_2048.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.1, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_1_gandk_2048.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.2, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_2_gandk_2048.csv")
source('~/Dropbox/mmd_project_code/gandk_plots_compare.R')
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.0, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_0_new_500.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.1, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_1_new_500.csv")
source('~/Dropbox/mmd_project_code/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.2, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_2_new_500.csv")
source('~/Dropbox/mmd_project_code/gandk_plots_compare.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
bacteria
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
?glmmPQL
?glmer
data
?glmmPQL
?glm
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
mod
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
summary(mod)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
?pnorm
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
?logit
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
warnings()
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
plot_1
plot_2
### Exercise 3
library(LaplacesDemon)
# Parameter values: \beta_0 = 0, \beta_1 = 1
# x values
x <- seq(from = -2, to = 2, by = 0.1)
# Standard normal case
y <- 1-pnorm(-x)
plot_1 <- plot(x, y, xlab="x", ylab="mu(x)", main ="Standard normal errors")
plot_1
# Logit distribution case
y <- invlogit(x)
plot_2 <- plot(x, y, xlab="x", ylab="mu(x)", main ="Logit distributed errors")
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
pi
sqrt(3)
pi*2/sqrt(3)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
sqrt(3)
y3
sqrt(3)-2
(sqrt(3)-2)/(2*sqrt(3))
sqrt(3)
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/Untitled.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
mod <- glm(y ~ trt + week, family = binomial, data = bacteria)
mod1 <- glmer(y ~ trt + week, family = binomial, data = bacteria)
?glmer
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
summary(mod)
summary(mod_)
summary(mod1)
summary(mod2)
?glmmPQL
?glmer
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/Desktop/APTS week 2/stat_mod_ex2.R')
source('~/Dropbox/ABC_Rcode/toggle_switch_generate.R')
source('~/Dropbox/ABC_Rcode/toggle_switch_generate.R')
?rtruncnorm
source('~/Dropbox/ABC_Rcode/toggle_switch_generate.R')
source('~/Dropbox/ABC_Rcode/toggle_switch_wsmc.R')
getwd()
setwd("/Users/HaritaDellaporta/Dropbox/ABC_Rcode")
getwd()
source('~/Dropbox/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.0, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_0_gandk_2048.csv")
source('~/Dropbox/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.1, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_1_gandk_2048.csv")
source('~/Dropbox/ABC_Rcode/gandk_wsmc.R')
# Wasserstein SMC
filename = paste0(prefix, "gandkwsmc.n", nobservations,"outl",.2, ".RData")
load(filename)
results_was = results
wsmc.df = wsmc_to_dataframe(results_was)
nsteps = tail(wsmc.df$step,n=1)
#step = nsteps
# set step such that the number of model simulations until that point is about 2.4^10^6
step = 34
wsmc.df = wsmc.df[wsmc.df$step == step,]
write.csv(wsmc.df, "results_2_gandk_2048.csv")
source('~/Dropbox/ABC_Rcode/toggle_switch_wsmc.R')
install.packages('winference')
source('~/Dropbox/ABC_Rcode/toggle_switch_wsmc.R')
